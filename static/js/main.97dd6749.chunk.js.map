{"version":3,"sources":["component/SearchBox.js","component/Card.js","component/CardList.js","component/Scroll.js","component/ErrorBoundry.js","container/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","id","name","email","style","margin","alt","src","CardList","robots","StrictMode","map","user","index","Scroll","props","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","json","jsonRobots","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAmC,EAAjCC,YAAkC,IAApBC,EAAmB,EAAnBA,aAC/B,OACI,qBAAKC,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCIHK,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,MAAO,CAAEC,OAAQ,OAAQT,UAAU,sCAAxC,UAEI,qBAAKU,IAAI,SAASC,IAAG,+BAA0BN,EAA1B,YACrB,6BAAKC,IACL,6BAAKC,QCeFK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,cAAC,IAAMC,WAAP,UAEID,EAAOE,KAAI,SAACC,EAAMC,GAClB,OACI,cAAC,EAAD,CAEAZ,GAAIQ,EAAOI,GAAOZ,GAClBC,KAAMO,EAAOI,GAAOX,KACpBC,MAAOM,EAAOI,GAAOV,OAHhBU,SCFNC,EATA,SAACC,GAEZ,OACI,qBAAKX,MAAO,CAACY,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKH,EAAMI,YCgBJC,E,kDAnBX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IACDM,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACL,yDAEJG,KAAKV,MAAMI,a,GAhBEQ,aCuDZC,G,wDAhDX,aAAc,IAAD,8BACT,gBASJC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAChC,YAAaoC,EAAMC,OAAOC,SAVzC,EAAKX,MAAQ,CACTZ,OAAS,GACTf,YAAc,IAElBuC,QAAQC,IAAI,oBACZD,QAAQC,IAAI,mCAPH,E,qDAeb,WAAoB,IAAD,OACdC,MAAM,8CACLC,MAAK,SAAA3B,GAAM,OAAIA,EAAO4B,UACtBD,MAAK,SAAAE,GAAU,OAAI,EAAKZ,SAAS,CAACjB,OAAQ6B,OAE3CL,QAAQC,IAAI,4B,oBAGjB,WACI,MAAiCT,KAAKJ,MAA9BZ,EAAR,EAAQA,OAASf,EAAjB,EAAiBA,YACjBuC,QAAQC,IAAI,eACZ,IAAMK,EAAiB9B,EAAO+B,QAAQ,SAAAC,GAAU,IAAD,EAC3C,iBAAOA,EAAMvC,YAAb,aAAO,EAAYwC,cAAcC,SAASjD,EAAYgD,kBAI3D,OAAQjC,EAAOmC,OAIN,sBAAKhD,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWD,aAAc8B,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACI,cAAC,EAAD,CAAUpB,OAAQ8B,WAR7B,6C,GAjCKZ,cCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAM5C,WAAP,UACE,cAAC,EAAD,MAEF6C,SAASC,eAAe,SAM1BX,M","file":"static/js/main.97dd6749.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield , searchChange }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n        <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n        <div style={{ margin: '7px'}} className=\"bg-light-green dib br3 pa3 na2 grow\">\r\n            \r\n            <img alt=\"robots\" src={`https://robohash.org/${id}200x20`}/>\r\n            <h3>{name}</h3>\r\n            <h3>{email}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n    /*if (true) {\r\n        throw new Error('Noooo');\r\n    }*/\r\n    return (\r\n        <React.StrictMode>\r\n        {\r\n            robots.map((user, index) => {\r\n            return (\r\n                <Card \r\n                key={index} \r\n                id={robots[index].id} \r\n                name={robots[index].name} \r\n                email={robots[index].email}/>);\r\n            })\r\n        }\r\n      </React.StrictMode>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    \r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '3px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React , { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError) {\r\n           return <h1>Oooops. Thats not good.</h1>; \r\n        }\r\n       return this.props.children;       \r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React , { Component } from 'react';\r\n//import { robots } from './robots.js';\r\nimport SearchBox from '../component/SearchBox.js';\r\nimport CardList from '../component/CardList.js';\r\nimport Scroll from '../component/Scroll.js';\r\nimport ErrorBoundry from '../component/ErrorBoundry.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        }\r\n        console.log(\"In constructor()\");\r\n        console.log(\"In constructor() new after push\");\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        //console.log(event.target.value);\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    componentDidMount(){\r\n         fetch('https://jsonplaceholder.typicode.com/users')\r\n         .then(robots => robots.json())\r\n         .then(jsonRobots => this.setState({robots: jsonRobots}));\r\n         //.then(jsonRobots => []);\r\n         console.log(\"In componentDidMount()\");\r\n    }\r\n\r\n    render(){\r\n        const { robots , searchfield } = this.state;\r\n        console.log(\"In render()\");\r\n        const filteredRobots = robots.filter( robot => {\r\n            return robot.name?.toLowerCase().includes(searchfield.toLowerCase());\r\n        }\r\n\r\n        );\r\n       return !robots.length?\r\n             <h1>Loading</h1>\r\n        :\r\n             (\r\n                <div className=\"tc\">\r\n                    <h1>Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )         \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}